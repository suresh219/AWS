## To check volume is mounted or not
lsblk

## Use the file -s command to get information about a device, such as its file system type. If the output shows simply data, as in the## following example output, there is no file system on the device and you must create one.

sudo file -s /dev/xvdf  (/dev/xvdf is volume type)

## If you discovered that there is a file system on the device in the previous step, skip this step. If you have an empty volume, use ## the mkfs -t command to create a file system on the volume.

sudo mkfs -t xfs /dev/xvdf (xfs is file systemtype)

## create a directory and attach it to new volume

sudo mkdir /data

sudo mount /dev/xvdf /data

##To mount an attached volume automatically after reboot

##Create a backup of your /etc/fstab file that you can use if you accidentally destroy or delete this file while editing it.

sudo cp /etc/fstab /etc/fstab.orig

##Use the blkid command to find the UUID of the device.

sudo blkid

##Open the /etc/fstab file using any text editor, such as nano or vim.

sudo vim /etc/fstab

##Add the following entry to /etc/fstab to mount the device at the specified mount point. The fields are the UUID value returned by bl##kid (or lsblk for Ubuntu 18.04), the mount point, the file system, and the recommended file system mount options. For more informati##on, see the manual page for fstab (run man fstab).

sudo vim /etc/fstab
add this entry
/dev/xvdf  /data  xfs  defaults,nofail  0  2

##To verify that your entry works, run the following commands to unmount the device and then mount all file systems in /etc/fstab. If there are no errors, the /etc/fstab file is OK and your file system will mount automatically after it is rebooted.

sudo umount /data

## if any error occur like target system busy use below command

fuser -vm -k /data
or 
umount -l /data

## Remount the volume

sudo mount -a

##check volumes

lsblk
